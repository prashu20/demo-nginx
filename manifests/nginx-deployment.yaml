apiVersion: v1
kind: Namespace
metadata:
  name: demo-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-nginx
  namespace: demo-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-nginx
  template:
    metadata:
      labels:
        app: demo-nginx
    spec:
      containers:
      - name: web
        image: registry.redhat.io/ubi8/nodejs-22-minimal
        ports:
        - containerPort: 8080
        env:
        - name: NODE_ENV
          value: "production"
        command: ["node"]
        args: ["-e", "require('http').createServer((req,res)=>res.end('Hello from OpenShift!')).listen(8080)"]
---
apiVersion: v1
kind: Service
metadata:
  name: demo-nginx
  namespace: demo-nginx
spec:
  selector:
    app: demo-nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: demo-nginx
  namespace: demo-nginx
spec:
  to:
    kind: Service
    name: demo-nginx
  port:
    targetPort: 80
  tls:
    termination: edge

